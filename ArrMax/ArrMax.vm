function ArrMax.arrMax 0

// Set THAT to base address of array (m)
push argument 0
pop pointer 1

// i = 0 (we'll start from first element)
push that 0
// Store max in temp 0
pop temp 0

// Set i = 1
push constant 1
pop local 0   // local 0 will act as i

label LOOP_START
  // if i >= n, end loop
  push local 0
  push argument 1
  lt
  not
  if-goto LOOP_END

  // Load array[i]
  push local 0
  push pointer 1
  add
  pop pointer 1
  push that 0

  // Compare with max
  push temp 0
  gt
  if-goto UPDATE_MAX

  goto CONTINUE

label UPDATE_MAX
  // array[i] > max, so update max
  push that 0
  pop temp 0

label CONTINUE
  // Restore pointer 1 to base address
  push argument 0
  pop pointer 1

  // i++
  push local 0
  push constant 1
  add
  pop local 0

  goto LOOP_START

label LOOP_END
  push temp 0
  return
