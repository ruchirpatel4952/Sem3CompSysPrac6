// Contains a function ArrMax.arrMax that finds and returns the largest element in the array a of length b.
// a & b are both supplied as arguments

function ArrMax.arrMax 2
    // Input parameters:
    // argument 0 = pointer to array a
    // argument 1 = length b
    
    // Edge case: if length is 0, return 0
    push argument 1
    push 0
    eq
    if-goto RETURN_ZERO
    
    // Initialize max value with first element
    push argument 0     // Base address of array
    push 0              // Index 0
    add                 // Calculate address of a[0]
    pop pointer 1       // Set THAT to point to a[0]
    push that 0         // Get value at a[0]
    pop local 0         // local 0 = max value
    
    push 1              // i = 1
    pop local 1         // local 1 = i
    
LOOP:
    // Check if we've processed all elements
    push local 1        // i
    push argument 1     // b (array length)
    eq                  // i == b?
    if-goto DONE        // If equal, we're done
    
    // Load current array element a[i]
    push argument 0     // Base address of array
    push local 1        // i
    add                 // Calculate address of a[i]
    pop pointer 1       // Set THAT to point to a[i]
    push that 0         // Get value at a[i]
    
    // Compare with current max
    push local 0        // max
    gt                  // a[i] > max?
    not
    if-goto NOT_BIGGER  // If a[i] <= max, don't update
    
    // Update max if current element is larger
    push argument 0     // Base address of array
    push local 1        // i
    add                 // Calculate address of a[i]
    pop pointer 1       // Set THAT to point to a[i]
    push that 0         // Get value at a[i]
    pop local 0         // max = a[i]
    
NOT_BIGGER:
    // Increment loop counter
    push local 1
    push 1
    add               // i++
    pop local 1
    goto LOOP         // Continue loop
    
RETURN_ZERO:
    push 0
    return            // Return 0 for empty array

DONE:
    // Return the max value
    push local 0
    return